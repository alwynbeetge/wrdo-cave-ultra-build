"use strict";exports.id=641,exports.ids=[641],exports.modules={48767:(e,t,s)=>{s.d(t,{$C:()=>n,eF:()=>i});let a={"gpt-4o":{id:"gpt-4o",name:"GPT-4o",provider:"openai",costPerToken:3e-5,maxTokens:4e3,capabilities:["text","analysis","coding","reasoning"]},"gpt-4-turbo":{id:"gpt-4-turbo",name:"GPT-4 Turbo",provider:"openai",costPerToken:1e-5,maxTokens:4e3,capabilities:["text","analysis","coding"]},"gpt-3.5-turbo":{id:"gpt-3.5-turbo",name:"GPT-3.5 Turbo",provider:"openai",costPerToken:2e-6,maxTokens:2e3,capabilities:["text","analysis"]},"gemini-pro":{id:"gemini-pro",name:"Gemini Pro",provider:"gemini",costPerToken:1e-6,maxTokens:3e3,capabilities:["text","analysis","reasoning"]},"deepseek-chat":{id:"deepseek-chat",name:"DeepSeek Chat",provider:"deepseek",costPerToken:5e-7,maxTokens:2500,capabilities:["text","coding","math"]}},n={"deep-agent":{id:"deep-agent",name:"DeepAgent",provider:"openai",costPerToken:1e-4,maxTokens:8e3,capabilities:["research","analysis","data-processing","automation"],isAgent:!0,requiresApproval:!0,estimatedCostPerRequest:2.5,description:"Advanced autonomous agent for complex research and analysis tasks",specializedFor:["market-research","competitive-analysis","data-mining","trend-analysis"],riskLevel:"medium",maxExecutionTime:30},"devin-agent":{id:"devin-agent",name:"Devin",provider:"openai",costPerToken:15e-5,maxTokens:12e3,capabilities:["coding","software-development","debugging","architecture"],isAgent:!0,requiresApproval:!0,estimatedCostPerRequest:5,description:"Expert software development agent for complex coding tasks",specializedFor:["full-stack-development","code-review","architecture-design","debugging"],riskLevel:"high",maxExecutionTime:60}};class r{constructor(){if(this.baseUrl="https://apps.abacus.ai",this.apiKey=process.env.ABACUSAI_API_KEY||"mock-abacus-api-key-for-development",!this.apiKey)throw Error("ABACUSAI_API_KEY environment variable is required")}async chatCompletion(e,t,s={}){let r=Date.now();if(n[t])throw Error("Agent requests require explicit approval. Use requestAgentExecution() method.");if(!a[t])throw Error(`Unknown model: ${t}`);let i=this.getFallbackChain(t),o=null;for(let t=0;t<i.length;t++){let n=i[t],l=a[n];try{let a=await this.executeModelRequest(e,n,l,s),i=Date.now()-r;return{content:a.content,model:n,provider:l.provider,tokensUsed:a.tokensUsed,cost:a.cost,processingTime:i,fallbackUsed:t>0,fallbackReason:t>0?o?.message:void 0}}catch(e){if(console.error(`Model ${n} failed:`,(o=e instanceof Error?e:Error("Unknown error")).message),t===i.length-1)throw Error(`All AI models failed. Last error: ${o.message}`);continue}}throw Error("Unexpected error in AI router")}getFallbackChain(e){return({"gpt-4o":["gpt-4o","gpt-4-turbo","gemini-pro","deepseek-chat"],"gpt-4-turbo":["gpt-4-turbo","gpt-4o","gemini-pro","deepseek-chat"],"gpt-3.5-turbo":["gpt-3.5-turbo","gemini-pro","deepseek-chat"],"gemini-pro":["gemini-pro","gpt-4-turbo","deepseek-chat"],"deepseek-chat":["deepseek-chat","gemini-pro","gpt-3.5-turbo"]})[e]||[e]}async executeModelRequest(e,t,s,a){let n={model:{"gpt-4o":"gpt-4o","gpt-4-turbo":"gpt-4-turbo-preview","gpt-3.5-turbo":"gpt-3.5-turbo","gemini-pro":"gemini-pro","deepseek-chat":"deepseek-chat"}[t]||"gpt-4.1-mini",messages:e,max_tokens:Math.min(a.maxTokens||s.maxTokens,s.maxTokens),temperature:a.temperature||.7,...a.userId&&{user:a.userId}},r=await fetch(`${this.baseUrl}/v1/chat/completions`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.apiKey}`},body:JSON.stringify(n)});if(!r.ok){let e=await r.text();throw Error(`API request failed: ${r.status} ${r.statusText} - ${e}`)}let i=await r.json();if(!i.choices||!i.choices[0]||!i.choices[0].message)throw Error("Invalid API response format");let o=i.choices[0].message.content,l=i.usage?.total_tokens||0,c=l*s.costPerToken;return{content:o,tokensUsed:l,cost:c}}async requestAgentExecution(e,t,s){let a=n[e];if(!a)throw Error(`Unknown agent: ${e}`);let r=this.analyzeTaskComplexity(t);return{agentId:e,task:t,estimatedCost:a.estimatedCostPerRequest*r.multiplier,estimatedTime:Math.min(a.maxExecutionTime*r.multiplier,s.maxExecutionTime||a.maxExecutionTime),riskLevel:a.riskLevel,justification:s.justification}}async executeApprovedAgentTask(e,t,s){if(!t)throw Error("Agent execution was not approved");let a=n[e.agentId];if(!a)throw Error(`Unknown agent: ${e.agentId}`);let r=Date.now(),i=[{role:"system",content:this.createAgentSystemPrompt(a,e.task)},{role:"user",content:e.task}];try{let t=await this.executeModelRequest(i,"gpt-4o",{...a,maxTokens:a.maxTokens},{maxTokens:a.maxTokens}),s=Date.now()-r;return{content:t.content,model:e.agentId,provider:a.provider,tokensUsed:t.tokensUsed,cost:t.cost,processingTime:s}}catch(e){throw Error(`Agent execution failed: ${e instanceof Error?e.message:"Unknown error"}`)}}analyzeTaskComplexity(e){let t=e.toLowerCase(),s="simple",a=1,n=["research","analyze","comprehensive","detailed","market analysis","competitive analysis","full stack","architecture","multi-step","integration","automation","workflow"].filter(e=>t.includes(e)).length,r=["review","summarize","compare","list","explain","debug","optimize"].filter(e=>t.includes(e)).length;return n>=2||t.length>500?(s="complex",a=2.5):(n>=1||r>=2||t.length>200)&&(s="moderate",a=1.5),{multiplier:a,complexity:s}}createAgentSystemPrompt(e,t){return`You are ${e.name}, ${e.description}.

Your specialized capabilities include: ${e.specializedFor.join(", ")}.

IMPORTANT GUIDELINES:
- Provide comprehensive, professional analysis
- Use structured formatting with clear sections
- Include actionable recommendations
- Be thorough but concise
- Cite sources when making claims
- Acknowledge limitations or assumptions

Risk Level: ${e.riskLevel.toUpperCase()}
Max Execution Time: ${e.maxExecutionTime} minutes

Current Task: ${t}

Provide a detailed, well-structured response that maximizes value for the user.`}getAvailableModels(){return[...Object.values(a),...Object.values(n)]}getModel(e){return a[e]||n[e]||null}isAgent(e){return!!n[e]}}let i=new r},60641:(e,t,s)=>{s.d(t,{AB:()=>d,DE:()=>u,Q0:()=>p,g:()=>c});var a=s(17702),n=s(9487),r=s(79097),i=s(48767),o=s(94034);class l extends a.EventEmitter{constructor(){super(),this.tasks=new Map,this.runningTasks=new Set,this.workers=new Map,this.maxConcurrentTasks=5,this.processingInterval=null,this.statsInterval=null,this.isRunning=!1,this.startProcessing(),this.startStatsCollection()}static getInstance(){return l.instance||(l.instance=new l),l.instance}async addTask(e){let t=`task_${Date.now()}_${Math.random().toString(36).substr(2,9)}`,s={...e,id:t,status:"pending",createdAt:new Date,retryCount:0,maxRetries:e.maxRetries||3,timeout:e.timeout||3e5};return this.tasks.set(t,s),await this.persistTask(s),this.emit("taskAdded",s),s.userId&&r.p.sendTaskUpdate(s.userId,t,"queued"),console.log(`📋 Task ${t} added to queue (${e.type})`),t}async startProcessing(){this.isRunning||(this.isRunning=!0,this.processingInterval=setInterval(async()=>{await this.processPendingTasks()},1e3),console.log("\uD83D\uDE80 Task queue processing started"))}async processPendingTasks(){if(this.runningTasks.size>=this.maxConcurrentTasks)return;let e=Array.from(this.tasks.values()).filter(e=>"pending"===e.status&&this.areDependenciesMet(e)).sort((e,t)=>{let s={critical:4,high:3,normal:2,low:1},a=s[t.priority]-s[e.priority];return 0!==a?a:e.createdAt.getTime()-t.createdAt.getTime()}),t=this.maxConcurrentTasks-this.runningTasks.size;for(let s of e.slice(0,t))await this.executeTask(s)}areDependenciesMet(e){return!e.dependencies||0===e.dependencies.length||e.dependencies.every(e=>{let t=this.tasks.get(e);return t&&"completed"===t.status})}async executeTask(e){try{e.status="running",e.startedAt=new Date,this.runningTasks.add(e.id),await this.persistTask(e),this.emit("taskStarted",e),e.userId&&r.p.sendTaskUpdate(e.userId,e.id,"running",0),console.log(`⚡ Executing task ${e.id} (${e.type})`);let t=await this.processTaskByType(e);e.status="completed",e.completedAt=new Date,e.result=t,e.actualDuration=e.completedAt.getTime()-e.startedAt.getTime(),e.progress=100,this.runningTasks.delete(e.id),await this.persistTask(e),this.emit("taskCompleted",e),e.userId&&(r.p.sendTaskUpdate(e.userId,e.id,"completed",100),"agent_execution"===e.type&&r.p.sendAgentCompletion(e.userId,e.payload.agentId,t)),console.log(`✅ Task ${e.id} completed successfully`)}catch(t){await this.handleTaskFailure(e,t)}}async processTaskByType(e){let t=t=>{e.progress=t,e.userId&&r.p.sendTaskUpdate(e.userId,e.id,"running",t)};switch(e.type){case"ai_analysis":return await this.processAIAnalysis(e,t);case"email_processing":return await this.processEmailTask(e,t);case"data_analysis":return await this.processDataAnalysis(e,t);case"report_generation":return await this.processReportGeneration(e,t);case"system_maintenance":return await this.processSystemMaintenance(e,t);case"agent_execution":return await this.processAgentExecution(e,t);default:throw Error(`Unknown task type: ${e.type}`)}}async processAIAnalysis(e,t){t(10);let{prompt:s,model:a="gpt-4o",userId:n}=e.payload;t(30),t(50);let r=await i.eF.chatCompletion([{role:"system",content:"You are an expert data analyst. Provide comprehensive analysis."},{role:"user",content:s}],a,{userId:n});return t(90),{analysis:r.content,model:r.model,tokensUsed:r.tokensUsed,cost:r.cost,processingTime:r.processingTime}}async processEmailTask(e,t){t(20);let{userId:s,action:a}=e.payload;return t(50),"sync"===a&&await o.bX.startEmailMonitoring(s),t(100),{success:!0,action:a}}async processDataAnalysis(e,t){t(10);let{dataSource:s,analysisType:a,parameters:n}=e.payload;t(30),await this.delay(2e3),t(60);let r={dataSource:s,analysisType:a,insights:"Data analysis completed with key insights",metrics:{totalRecords:Math.floor(1e4*Math.random()),anomalies:Math.floor(50*Math.random()),trends:["upward","stable","declining"][Math.floor(3*Math.random())]},completedAt:new Date};return t(100),r}async processReportGeneration(e,t){t(10);let{reportType:s,timeframe:a,includeSections:n}=e.payload;t(30);let r=[];for(let e of n)r.push({name:e,content:`Generated content for ${e}`,data:{}}),t(30+r.length/n.length*50);t(90);let i={type:s,timeframe:a,generatedAt:new Date,sections:r,summary:"Report generated successfully with all requested sections"};return t(100),i}async processSystemMaintenance(e,t){t(10);let{maintenanceType:s}=e.payload;t(30);let a=[];return"cleanup"===s&&(a.push("Database cleanup completed"),t(50),a.push("Log files cleaned"),t(70),a.push("Cache cleared"),t(90)),t(100),{maintenanceType:s,results:a,completedAt:new Date}}async processAgentExecution(e,t){t(10);let{agentId:s,agentTask:a,approvalData:r}=e.payload;t(30);let o=await i.eF.executeApprovedAgentTask(r,!0,e.userId);return t(80),await n._.deepAgentTask.create({data:{title:a,description:`Agent execution: ${s}`,taskType:"execution",briefing:r,status:"completed",result:{content:o.content,model:o.model,provider:o.provider,tokensUsed:o.tokensUsed,cost:o.cost,processingTime:o.processingTime},actualCost:o.cost,completedAt:new Date,userId:e.userId}}),t(100),o}async handleTaskFailure(e,t){e.retryCount++,this.runningTasks.delete(e.id),e.retryCount<=e.maxRetries?(e.status="retrying",e.error=t instanceof Error?t.message:"Unknown error",console.log(`🔄 Retrying task ${e.id} (attempt ${e.retryCount}/${e.maxRetries})`),setTimeout(async()=>{e.status="pending",await this.persistTask(e)},1e3*Math.pow(2,e.retryCount))):(e.status="failed",e.failedAt=new Date,e.error=t instanceof Error?t.message:"Unknown error",console.error(`❌ Task ${e.id} failed permanently:`,e.error),this.emit("taskFailed",e),e.userId&&r.p.sendTaskUpdate(e.userId,e.id,"failed")),await this.persistTask(e)}getTask(e){return this.tasks.get(e)}getUserTasks(e){return Array.from(this.tasks.values()).filter(t=>t.userId===e)}getStats(){let e=Array.from(this.tasks.values()),t=e.filter(e=>"completed"===e.status),s=e.filter(e=>"failed"===e.status),a=t.length>0?t.reduce((e,t)=>e+(t.actualDuration||0),0)/t.length:0,n=e.length>0?t.length/(t.length+s.length):1,r="healthy";return n<.8&&(r="degraded"),(n<.5||this.runningTasks.size>=this.maxConcurrentTasks)&&(r="critical"),{pending:e.filter(e=>"pending"===e.status).length,running:e.filter(e=>"running"===e.status).length,completed:t.length,failed:s.length,totalProcessed:t.length+s.length,averageProcessingTime:a,successRate:n,queueHealth:r}}async cancelTask(e){let t=this.tasks.get(e);return!!t&&"pending"===t.status&&(t.status="cancelled",await this.persistTask(t),this.emit("taskCancelled",t),!0)}async persistTask(e){try{console.log(`💾 Task ${e.id} persisted (${e.status})`)}catch(e){console.error("Failed to persist task:",e)}}startStatsCollection(){this.statsInterval=setInterval(()=>{let e=this.getStats();this.emit("statsUpdated",e),"healthy"!==e.queueHealth&&console.warn(`⚠️ Queue health: ${e.queueHealth}`)},3e4)}delay(e){return new Promise(t=>setTimeout(t,e))}async shutdown(){this.isRunning=!1,this.processingInterval&&clearInterval(this.processingInterval),this.statsInterval&&clearInterval(this.statsInterval);let e=Date.now();for(;this.runningTasks.size>0&&Date.now()-e<3e4;)await this.delay(1e3);console.log("\uD83D\uDCCB Task queue shutdown completed")}}let c=l.getInstance();async function d(e,t,s="normal"){return await c.addTask({type:"ai_analysis",priority:s,payload:{prompt:t,userId:e},userId:e,maxRetries:2,timeout:18e4})}async function u(e,t,s="normal"){return await c.addTask({type:"email_processing",priority:s,payload:{userId:e,action:t},userId:e,maxRetries:3,timeout:12e4})}async function p(e,t,s,a){return await c.addTask({type:"agent_execution",priority:"high",payload:{agentId:t,agentTask:s,approvalData:a,userId:e},userId:e,maxRetries:1,timeout:18e5})}}};